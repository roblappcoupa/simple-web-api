services:
  apigateway:
    build:
      context: ./Proxy
      dockerfile: Dockerfile
    container_name: apigateway
    ports:
      - "5011:5011"
    environment:
      - LISTEN_PORT=5011
      # - PROXY_HOST=host.docker.internal:5012 # If running webapi in an IDE, you can use this
      - PROXY_HOST=webapi:5012
      - TIMEOUT=20
      - SHORT_TIMEOUT=5
      - BUFFERING=off

  toplevelproxy:
    build:
      context: ./Proxy
      dockerfile: Dockerfile
    container_name: toplevelproxy
    ports:
      - "5010:5010"
    depends_on:
      - apigateway
    environment:
      - LISTEN_PORT=5010
      - PROXY_HOST=apigateway:5011
      - TIMEOUT=20
      - SHORT_TIMEOUT=5
      - BUFFERING=off

  webapi:
    build:
      context: ./WebApi
      dockerfile: Dockerfile
    container_name: webapi
    ports:
      - "5012:5012"
    environment:
      - ASPNETCORE_HTTP_PORTS=5012
    env_file: "WebApi/webapi.env"

  upstream_webapi:
    build:
      context: ./WebApi
      dockerfile: Dockerfile
    container_name: upstream_webapi
    ports:
      - "5013:5013"
    environment:
      - ASPNETCORE_HTTP_PORTS=5013
    env_file: "WebApi/upstream_webapi.env"

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    ports:
      - "5050:1433"
    env_file: "sqlserver.env"

